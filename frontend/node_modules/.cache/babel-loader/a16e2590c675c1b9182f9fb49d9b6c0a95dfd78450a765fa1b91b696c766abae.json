{"ast":null,"code":"var _jsxFileName = \"/Users/jacquelinewallace/Desktop/weather_tracker/frontend/src/pages/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Card, CardContent, Typography, Box, Chip, CircularProgress, Alert } from '@mui/material';\nimport { Thermostat, LocationOn, WbSunny, TrendingUp } from '@mui/icons-material';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n  const fetchDashboardData = async () => {\n    try {\n      const response = await fetch('/api/weather/dashboard', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch dashboard data');\n      }\n      const data = await response.json();\n      setDashboardData(data);\n    } catch (err) {\n      setError('Failed to load dashboard data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const chartData = {\n    labels: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.temperature_trends.map(item => new Date(item.date).toLocaleDateString())) || [],\n    datasets: [{\n      label: 'Average Temperature (°C)',\n      data: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.temperature_trends.map(item => item.average_temp)) || [],\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.5)',\n      tension: 0.1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Temperature Trends (Last 7 Days)'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(LocationOn, {\n                color: \"primary\",\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Total Locations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary\",\n              children: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.total_locations) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Thermostat, {\n                color: \"primary\",\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Avg Temperature\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary\",\n              children: dashboardData !== null && dashboardData !== void 0 && dashboardData.average_temperature ? `${dashboardData.average_temperature}°C` : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(WbSunny, {\n                color: \"primary\",\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Recent Weather\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary\",\n              children: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.recent_weather.length) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n                color: \"primary\",\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Trends\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary\",\n              children: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.temperature_trends.length) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Temperature Trends\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), dashboardData !== null && dashboardData !== void 0 && dashboardData.temperature_trends.length ? /*#__PURE__*/_jsxDEV(Line, {\n              data: chartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: 200,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                children: \"No temperature data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Recent Weather\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), dashboardData !== null && dashboardData !== void 0 && dashboardData.recent_weather.length ? /*#__PURE__*/_jsxDEV(Box, {\n              children: dashboardData.recent_weather.slice(0, 5).map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n                mb: 2,\n                p: 2,\n                bgcolor: \"grey.50\",\n                borderRadius: 1,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  color: \"primary\",\n                  children: item.location.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: [item.location.city, \", \", item.location.country]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  mt: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    color: \"primary\",\n                    sx: {\n                      mr: 1\n                    },\n                    children: [item.weather.temperature, \"\\xB0C\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: item.weather.description,\n                    size: \"small\",\n                    color: \"secondary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              children: \"No recent weather data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"9UNUfqT2inwUtv8xjZQdQFFnbHk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","CardContent","Typography","Box","Chip","CircularProgress","Alert","Thermostat","LocationOn","WbSunny","TrendingUp","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","dashboardData","setDashboardData","loading","setLoading","error","setError","fetchDashboardData","response","fetch","headers","localStorage","getItem","ok","Error","data","json","err","chartData","labels","temperature_trends","map","item","Date","date","toLocaleDateString","datasets","label","average_temp","borderColor","backgroundColor","tension","chartOptions","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","sx","mb","variant","gutterBottom","container","spacing","xs","sm","md","color","mr","total_locations","average_temperature","recent_weather","length","options","height","slice","index","p","bgcolor","borderRadius","location","name","city","country","mt","weather","temperature","description","size","_c","$RefreshReg$"],"sources":["/Users/jacquelinewallace/Desktop/weather_tracker/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Box,\n  Chip,\n  CircularProgress,\n  Alert,\n  Paper,\n} from '@mui/material';\nimport {\n  Thermostat,\n  LocationOn,\n  WbSunny,\n  TrendingUp,\n} from '@mui/icons-material';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface WeatherData {\n  location: {\n    id: number;\n    name: string;\n    city: string;\n    country: string;\n  };\n  weather: {\n    temperature: number;\n    description: string;\n    humidity: number;\n    recorded_at: string;\n  };\n}\n\ninterface DashboardData {\n  total_locations: number;\n  average_temperature: number;\n  recent_weather: WeatherData[];\n  temperature_trends: Array<{\n    date: string;\n    average_temp: number;\n  }>;\n}\n\nconst Dashboard: React.FC = () => {\n  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  const fetchDashboardData = async () => {\n    try {\n      const response = await fetch('/api/weather/dashboard', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`,\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch dashboard data');\n      }\n      \n      const data = await response.json();\n      setDashboardData(data);\n    } catch (err) {\n      setError('Failed to load dashboard data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const chartData = {\n    labels: dashboardData?.temperature_trends.map(item => \n      new Date(item.date).toLocaleDateString()\n    ) || [],\n    datasets: [\n      {\n        label: 'Average Temperature (°C)',\n        data: dashboardData?.temperature_trends.map(item => item.average_temp) || [],\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: 'Temperature Trends (Last 7 Days)',\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n      },\n    },\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mb: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Dashboard\n      </Typography>\n      \n      <Grid container spacing={3}>\n        {/* Statistics Cards */}\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                <LocationOn color=\"primary\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Total Locations</Typography>\n              </Box>\n              <Typography variant=\"h4\" color=\"primary\">\n                {dashboardData?.total_locations || 0}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                <Thermostat color=\"primary\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Avg Temperature</Typography>\n              </Box>\n              <Typography variant=\"h4\" color=\"primary\">\n                {dashboardData?.average_temperature \n                  ? `${dashboardData.average_temperature}°C`\n                  : 'N/A'\n                }\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                <WbSunny color=\"primary\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Recent Weather</Typography>\n              </Box>\n              <Typography variant=\"h4\" color=\"primary\">\n                {dashboardData?.recent_weather.length || 0}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                <TrendingUp color=\"primary\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Trends</Typography>\n              </Box>\n              <Typography variant=\"h4\" color=\"primary\">\n                {dashboardData?.temperature_trends.length || 0}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Temperature Chart */}\n        <Grid item xs={12} md={8}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Temperature Trends\n              </Typography>\n              {dashboardData?.temperature_trends.length ? (\n                <Line data={chartData} options={chartOptions} />\n              ) : (\n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={200}>\n                  <Typography color=\"textSecondary\">\n                    No temperature data available\n                  </Typography>\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Recent Weather */}\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Recent Weather\n              </Typography>\n              {dashboardData?.recent_weather.length ? (\n                <Box>\n                  {dashboardData.recent_weather.slice(0, 5).map((item, index) => (\n                    <Box key={index} mb={2} p={2} bgcolor=\"grey.50\" borderRadius={1}>\n                      <Typography variant=\"subtitle2\" color=\"primary\">\n                        {item.location.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {item.location.city}, {item.location.country}\n                      </Typography>\n                      <Box display=\"flex\" alignItems=\"center\" mt={1}>\n                        <Typography variant=\"h6\" color=\"primary\" sx={{ mr: 1 }}>\n                          {item.weather.temperature}°C\n                        </Typography>\n                        <Chip \n                          label={item.weather.description} \n                          size=\"small\" \n                          color=\"secondary\" \n                        />\n                      </Box>\n                    </Box>\n                  ))}\n                </Box>\n              ) : (\n                <Typography color=\"textSecondary\">\n                  No recent weather data\n                </Typography>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}