{"ast":null,"code":"var _jsxFileName = \"/Users/jacquelinewallace/Desktop/weather_tracker/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      authService.getProfile().then(userData => {\n        setUser(userData);\n      }).catch(() => {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await authService.login(username, password);\n      localStorage.setItem('access_token', response.access_token);\n      localStorage.setItem('refresh_token', response.refresh_token);\n      setUser(response.user);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      localStorage.setItem('access_token', response.access_token);\n      localStorage.setItem('refresh_token', response.refresh_token);\n      setUser(response.user);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    setUser(null);\n  };\n  const updateProfile = async data => {\n    try {\n      const updatedUser = await authService.updateProfile(data);\n      setUser(updatedUser);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","getProfile","then","userData","catch","removeItem","finally","login","username","password","response","setItem","access_token","refresh_token","error","register","logout","updateProfile","data","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jacquelinewallace/Desktop/weather_tracker/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { authService } from '../services/authService';\n\ninterface User {\n  id: number;\n  username: string;\n  email: string;\n  first_name?: string;\n  last_name?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (username: string, password: string) => Promise<void>;\n  register: (userData: RegisterData) => Promise<void>;\n  logout: () => void;\n  updateProfile: (data: Partial<User>) => Promise<void>;\n}\n\ninterface RegisterData {\n  username: string;\n  email: string;\n  password: string;\n  first_name?: string;\n  last_name?: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      authService.getProfile()\n        .then(userData => {\n          setUser(userData);\n        })\n        .catch(() => {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    try {\n      const response = await authService.login(username, password);\n      localStorage.setItem('access_token', response.access_token);\n      localStorage.setItem('refresh_token', response.refresh_token);\n      setUser(response.user);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (userData: RegisterData) => {\n    try {\n      const response = await authService.register(userData);\n      localStorage.setItem('access_token', response.access_token);\n      localStorage.setItem('refresh_token', response.refresh_token);\n      setUser(response.user);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    setUser(null);\n  };\n\n  const updateProfile = async (data: Partial<User>) => {\n    try {\n      const updatedUser = await authService.updateProfile(data);\n      setUser(updatedUser);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}